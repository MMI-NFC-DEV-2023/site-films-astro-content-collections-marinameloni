---
import Layout from "@layouts/Layout.astro";
import { getEntry, getEntries } from "astro:content";
import { getCollection, render } from "astro:content";
import { formatDate } from "src/helpers";

export async function getStaticPaths() {
  const film = await getCollection("film");
  return film.map((film) => ({
    params: { id: film.id },
    props: { film },
  }));
}

const { film } = Astro.props;
const { Content } = await render(film);
const realisateur =
  film.data.realisateur && (await getEntry(film.data.realisateur));

const scenaristes =
  film.data.scenaristes && (await getEntries(film.data.scenaristes));

const roles =
  film.data.roles &&
  (await Promise.all(
    film.data.roles.map(async (r) => ({
      role: r.role,
      acteur: await getEntry(r.acteur),
    }))
  ));
---

<Layout pageTitle={`Fiche du film ${film.data.titre}`}>
  <section class="mx-8">
    <h1>{film.data.titre}</h1>
    <p>Date de sortie : {formatDate(film.data.dateSortie)}</p>
    {realisateur && <p> Réalisateur : {realisateur.data.nom}</p>}
    {
      scenaristes && (
        <p>
          {" "}
          Scénaristes :{" "}
          {scenaristes
            .map((s) => s.data.nom)
            .join(", ")
            .replace(/, ([^,]*)$/, " et $1")}
        </p>
      )
    }
    {
      roles && (
        <>
          <h2>Acteurs</h2>
          <ul>
            {roles.map(({ role, acteur }) => (
              <li>
                <strong>{role}</strong>  {acteur && <>: <a href={`/personne/${acteur.id}`}>{acteur?.data.nom}</a></>}
              </li>
            ))}
          </ul>
        </>
      )
    }

    <div class="prose">
      <Content />
    </div>
  </section>
</Layout>